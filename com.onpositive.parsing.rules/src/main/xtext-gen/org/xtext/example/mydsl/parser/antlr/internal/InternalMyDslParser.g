/*
 * generated by Xtext 2.10.0
 */
parser grammar InternalMyDslParser;

options {
	tokenVocab=InternalMyDslLexer;
	superClass=AbstractInternalAntlrParser;
}

@header {
package org.xtext.example.mydsl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.mydsl.services.MyDslGrammarAccess;

}

@members {

 	private MyDslGrammarAccess grammarAccess;

    public InternalMyDslParser(TokenStream input, MyDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected MyDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=Classes
		{
			newLeafNode(otherlv_0, grammarAccess.getModelAccess().getClassesKeyword_0());
		}
		otherlv_1=LeftSquareBracket
		{
			newLeafNode(otherlv_1, grammarAccess.getModelAccess().getLeftSquareBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getTokensTokenDefinitionParserRuleCall_2_0());
				}
				lv_tokens_2_0=ruleTokenDefinition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					add(
						$current,
						"tokens",
						lv_tokens_2_0,
						"org.xtext.example.mydsl.MyDsl.TokenDefinition");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3=Comma
			{
				newLeafNode(otherlv_3, grammarAccess.getModelAccess().getCommaKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getModelAccess().getTokensTokenDefinitionParserRuleCall_3_1_0());
					}
					lv_tokens_4_0=ruleTokenDefinition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getModelRule());
						}
						add(
							$current,
							"tokens",
							lv_tokens_4_0,
							"org.xtext.example.mydsl.MyDsl.TokenDefinition");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_5=RightSquareBracket
		{
			newLeafNode(otherlv_5, grammarAccess.getModelAccess().getRightSquareBracketKeyword_4());
		}
		otherlv_6=Functions
		{
			newLeafNode(otherlv_6, grammarAccess.getModelAccess().getFunctionsKeyword_5());
		}
		otherlv_7=LeftSquareBracket
		{
			newLeafNode(otherlv_7, grammarAccess.getModelAccess().getLeftSquareBracketKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getFunctionsFunctionParserRuleCall_7_0());
				}
				lv_functions_8_0=ruleFunction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					add(
						$current,
						"functions",
						lv_functions_8_0,
						"org.xtext.example.mydsl.MyDsl.Function");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_9=Comma
			{
				newLeafNode(otherlv_9, grammarAccess.getModelAccess().getCommaKeyword_8_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getModelAccess().getFunctionsFunctionParserRuleCall_8_1_0());
					}
					lv_functions_10_0=ruleFunction
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getModelRule());
						}
						add(
							$current,
							"functions",
							lv_functions_10_0,
							"org.xtext.example.mydsl.MyDsl.Function");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_11=RightSquareBracket
		{
			newLeafNode(otherlv_11, grammarAccess.getModelAccess().getRightSquareBracketKeyword_9());
		}
		otherlv_12=Layers
		{
			newLeafNode(otherlv_12, grammarAccess.getModelAccess().getLayersKeyword_10());
		}
		otherlv_13=LeftSquareBracket
		{
			newLeafNode(otherlv_13, grammarAccess.getModelAccess().getLeftSquareBracketKeyword_11());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getLayersLayerParserRuleCall_12_0());
				}
				lv_layers_14_0=ruleLayer
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					add(
						$current,
						"layers",
						lv_layers_14_0,
						"org.xtext.example.mydsl.MyDsl.Layer");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_15=Comma
			{
				newLeafNode(otherlv_15, grammarAccess.getModelAccess().getCommaKeyword_13_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getModelAccess().getLayersLayerParserRuleCall_13_1_0());
					}
					lv_layers_16_0=ruleLayer
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getModelRule());
						}
						add(
							$current,
							"layers",
							lv_layers_16_0,
							"org.xtext.example.mydsl.MyDsl.Layer");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_17=RightSquareBracket
		{
			newLeafNode(otherlv_17, grammarAccess.getModelAccess().getRightSquareBracketKeyword_14());
		}
		otherlv_18=Rules
		{
			newLeafNode(otherlv_18, grammarAccess.getModelAccess().getRulesKeyword_15());
		}
		this_BEGIN_19=RULE_BEGIN
		{
			newLeafNode(this_BEGIN_19, grammarAccess.getModelAccess().getBEGINTerminalRuleCall_16());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getRulesRuleParserRuleCall_17_0());
				}
				lv_rules_20_0=ruleRule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					add(
						$current,
						"rules",
						lv_rules_20_0,
						"org.xtext.example.mydsl.MyDsl.Rule");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		this_END_21=RULE_END
		{
			newLeafNode(this_END_21, grammarAccess.getModelAccess().getENDTerminalRuleCall_18());
		}
	)
;

// Entry rule entryRuleTransferModel
entryRuleTransferModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTransferModelRule()); }
	iv_ruleTransferModel=ruleTransferModel
	{ $current=$iv_ruleTransferModel.current; }
	EOF;

// Rule TransferModel
ruleTransferModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getTransferModelAccess().getSeqCallParserRuleCall_0_0());
				}
				lv_seq_0_0=ruleCall
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTransferModelRule());
					}
					add(
						$current,
						"seq",
						lv_seq_0_0,
						"org.xtext.example.mydsl.MyDsl.Call");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1=EqualsSignGreaterThanSign
			{
				newLeafNode(otherlv_1, grammarAccess.getTransferModelAccess().getEqualsSignGreaterThanSignKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTransferModelAccess().getSeqCallParserRuleCall_1_1_0());
					}
					lv_seq_2_0=ruleCall
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTransferModelRule());
						}
						add(
							$current,
							"seq",
							lv_seq_2_0,
							"org.xtext.example.mydsl.MyDsl.Call");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleCall
entryRuleCall returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCallRule()); }
	iv_ruleCall=ruleCall
	{ $current=$iv_ruleCall.current; }
	EOF;

// Rule Call
ruleCall returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCallRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getCallAccess().getNameFunctionCrossReference_0_0());
				}
			)
		)
		otherlv_1=LeftParenthesis
		{
			newLeafNode(otherlv_1, grammarAccess.getCallAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCallAccess().getArgsArgListParserRuleCall_2_0());
				}
				lv_args_2_0=ruleArgList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCallRule());
					}
					set(
						$current,
						"args",
						lv_args_2_0,
						"org.xtext.example.mydsl.MyDsl.ArgList");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_3=RightParenthesis
		{
			newLeafNode(otherlv_3, grammarAccess.getCallAccess().getRightParenthesisKeyword_3());
		}
		(
			(
				lv_op_4_0=QuestionMark
				{
					newLeafNode(lv_op_4_0, grammarAccess.getCallAccess().getOpQuestionMarkKeyword_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCallRule());
					}
					setWithLastConsumed($current, "op", lv_op_4_0, "?");
				}
			)
		)?
	)
;

// Entry rule entryRuleArgList
entryRuleArgList returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArgListRule()); }
	iv_ruleArgList=ruleArgList
	{ $current=$iv_ruleArgList.current; }
	EOF;

// Rule ArgList
ruleArgList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getArgListAccess().getAPrimaryExpressionParserRuleCall_0_0());
				}
				lv_a_0_0=rulePrimaryExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getArgListRule());
					}
					add(
						$current,
						"a",
						lv_a_0_0,
						"org.xtext.example.mydsl.MyDsl.PrimaryExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1=Comma
			{
				newLeafNode(otherlv_1, grammarAccess.getArgListAccess().getCommaKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getArgListAccess().getAPrimaryExpressionParserRuleCall_1_1_0());
					}
					lv_a_2_0=rulePrimaryExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getArgListRule());
						}
						add(
							$current,
							"a",
							lv_a_2_0,
							"org.xtext.example.mydsl.MyDsl.PrimaryExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleName
entryRuleName returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNameRule()); }
	iv_ruleName=ruleName
	{ $current=$iv_ruleName.current; }
	EOF;

// Rule Name
ruleName returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_v_0_0=RULE_ID
			{
				newLeafNode(lv_v_0_0, grammarAccess.getNameAccess().getVIDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getNameRule());
				}
				setWithLastConsumed(
					$current,
					"v",
					lv_v_0_0,
					"org.eclipse.xtext.common.Terminals.ID");
			}
		)
	)
;

// Entry rule entryRulePrimaryExpression
entryRulePrimaryExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrimaryExpressionRule()); }
	iv_rulePrimaryExpression=rulePrimaryExpression
	{ $current=$iv_rulePrimaryExpression.current; }
	EOF;

// Rule PrimaryExpression
rulePrimaryExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getCCallParserRuleCall_0_0());
				}
				lv_c_0_0=ruleCall
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
					}
					set(
						$current,
						"c",
						lv_c_0_0,
						"org.xtext.example.mydsl.MyDsl.Call");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getCNameParserRuleCall_1_0());
				}
				lv_c_1_0=ruleName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
					}
					set(
						$current,
						"c",
						lv_c_1_0,
						"org.xtext.example.mydsl.MyDsl.Name");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getCIntLiteralParserRuleCall_2_0());
				}
				lv_c_2_0=ruleIntLiteral
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
					}
					set(
						$current,
						"c",
						lv_c_2_0,
						"org.xtext.example.mydsl.MyDsl.IntLiteral");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getCStringLiteralParserRuleCall_3_0());
				}
				lv_c_3_0=ruleStringLiteral
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
					}
					set(
						$current,
						"c",
						lv_c_3_0,
						"org.xtext.example.mydsl.MyDsl.StringLiteral");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleIntLiteral
entryRuleIntLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIntLiteralRule()); }
	iv_ruleIntLiteral=ruleIntLiteral
	{ $current=$iv_ruleIntLiteral.current; }
	EOF;

// Rule IntLiteral
ruleIntLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_v_0_0=RULE_INT
			{
				newLeafNode(lv_v_0_0, grammarAccess.getIntLiteralAccess().getVINTTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getIntLiteralRule());
				}
				setWithLastConsumed(
					$current,
					"v",
					lv_v_0_0,
					"org.eclipse.xtext.common.Terminals.INT");
			}
		)
	)
;

// Entry rule entryRuleStringLiteral
entryRuleStringLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStringLiteralRule()); }
	iv_ruleStringLiteral=ruleStringLiteral
	{ $current=$iv_ruleStringLiteral.current; }
	EOF;

// Rule StringLiteral
ruleStringLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_v_0_0=RULE_STRING
			{
				newLeafNode(lv_v_0_0, grammarAccess.getStringLiteralAccess().getVSTRINGTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getStringLiteralRule());
				}
				setWithLastConsumed(
					$current,
					"v",
					lv_v_0_0,
					"org.eclipse.xtext.common.Terminals.STRING");
			}
		)
	)
;

// Entry rule entryRuleSeq
entryRuleSeq returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSeqRule()); }
	iv_ruleSeq=ruleSeq
	{ $current=$iv_ruleSeq.current; }
	EOF;

// Rule Seq
ruleSeq returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getSeqAccess().getSeqOrExpParserRuleCall_0());
			}
			lv_seq_0_0=ruleOrExp
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getSeqRule());
				}
				add(
					$current,
					"seq",
					lv_seq_0_0,
					"org.xtext.example.mydsl.MyDsl.OrExp");
				afterParserOrEnumRuleCall();
			}
		)
	)+
;

// Entry rule entryRuleGroup
entryRuleGroup returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGroupRule()); }
	iv_ruleGroup=ruleGroup
	{ $current=$iv_ruleGroup.current; }
	EOF;

// Rule Group
ruleGroup returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=LeftParenthesis
		{
			newLeafNode(otherlv_0, grammarAccess.getGroupAccess().getLeftParenthesisKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getGroupAccess().getSeqSeqParserRuleCall_1_0());
				}
				lv_seq_1_0=ruleSeq
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGroupRule());
					}
					set(
						$current,
						"seq",
						lv_seq_1_0,
						"org.xtext.example.mydsl.MyDsl.Seq");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=RightParenthesis
		{
			newLeafNode(otherlv_2, grammarAccess.getGroupAccess().getRightParenthesisKeyword_2());
		}
		(
			(
				(
					lv_op_3_0=PlusSign
					{
						newLeafNode(lv_op_3_0, grammarAccess.getGroupAccess().getOpPlusSignKeyword_3_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getGroupRule());
						}
						setWithLastConsumed($current, "op", lv_op_3_0, "+");
					}
				)
			)
			    |
			(
				(
					lv_op_4_0=QuestionMark
					{
						newLeafNode(lv_op_4_0, grammarAccess.getGroupAccess().getOpQuestionMarkKeyword_3_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getGroupRule());
						}
						setWithLastConsumed($current, "op", lv_op_4_0, "?");
					}
				)
			)
			    |
			(
				(
					lv_op_5_0=Asterisk
					{
						newLeafNode(lv_op_5_0, grammarAccess.getGroupAccess().getOpAsteriskKeyword_3_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getGroupRule());
						}
						setWithLastConsumed($current, "op", lv_op_5_0, "*");
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleOrExp
entryRuleOrExp returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOrExpRule()); }
	iv_ruleOrExp=ruleOrExp
	{ $current=$iv_ruleOrExp.current; }
	EOF;

// Rule OrExp
ruleOrExp returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getOrExpAccess().getOptionsElementParserRuleCall_0_0());
				}
				lv_options_0_0=ruleElement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOrExpRule());
					}
					add(
						$current,
						"options",
						lv_options_0_0,
						"org.xtext.example.mydsl.MyDsl.Element");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1=VerticalLine
			{
				newLeafNode(otherlv_1, grammarAccess.getOrExpAccess().getVerticalLineKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getOrExpAccess().getOptionsElementParserRuleCall_1_1_0());
					}
					lv_options_2_0=ruleElement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOrExpRule());
						}
						add(
							$current,
							"options",
							lv_options_2_0,
							"org.xtext.example.mydsl.MyDsl.Element");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleElement
entryRuleElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getElementRule()); }
	iv_ruleElement=ruleElement
	{ $current=$iv_ruleElement.current; }
	EOF;

// Rule Element
ruleElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getElementAccess().getValAssignParserRuleCall_0_0());
				}
				lv_val_0_0=ruleAssign
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getElementRule());
					}
					set(
						$current,
						"val",
						lv_val_0_0,
						"org.xtext.example.mydsl.MyDsl.Assign");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getElementAccess().getValStringLiteralParserRuleCall_1_0());
				}
				lv_val_1_0=ruleStringLiteral
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getElementRule());
					}
					set(
						$current,
						"val",
						lv_val_1_0,
						"org.xtext.example.mydsl.MyDsl.StringLiteral");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getElementAccess().getValGroupParserRuleCall_2_0());
				}
				lv_val_2_0=ruleGroup
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getElementRule());
					}
					set(
						$current,
						"val",
						lv_val_2_0,
						"org.xtext.example.mydsl.MyDsl.Group");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleAssign
entryRuleAssign returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAssignRule()); }
	iv_ruleAssign=ruleAssign
	{ $current=$iv_ruleAssign.current; }
	EOF;

// Rule Assign
ruleAssign returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getAssignAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAssignRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				(
					lv_op_1_0=EqualsSign
					{
						newLeafNode(lv_op_1_0, grammarAccess.getAssignAccess().getOpEqualsSignKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAssignRule());
						}
						setWithLastConsumed($current, "op", lv_op_1_0, "=");
					}
				)
			)
			    |
			(
				(
					lv_op_2_0=PlusSignEqualsSign
					{
						newLeafNode(lv_op_2_0, grammarAccess.getAssignAccess().getOpPlusSignEqualsSignKeyword_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAssignRule());
						}
						setWithLastConsumed($current, "op", lv_op_2_0, "+=");
					}
				)
			)
			    |
			(
				(
					lv_op_3_0=AsteriskEqualsSign
					{
						newLeafNode(lv_op_3_0, grammarAccess.getAssignAccess().getOpAsteriskEqualsSignKeyword_1_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAssignRule());
						}
						setWithLastConsumed($current, "op", lv_op_3_0, "*=");
					}
				)
			)
		)
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAssignRule());
					}
				}
				otherlv_4=RULE_ID
				{
					newLeafNode(otherlv_4, grammarAccess.getAssignAccess().getValTokenDefinitionCrossReference_2_0());
				}
			)
		)
	)
;

// Entry rule entryRuleTokenDefinition
entryRuleTokenDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTokenDefinitionRule()); }
	iv_ruleTokenDefinition=ruleTokenDefinition
	{ $current=$iv_ruleTokenDefinition.current; }
	EOF;

// Rule TokenDefinition
ruleTokenDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_ID
			{
				newLeafNode(lv_name_0_0, grammarAccess.getTokenDefinitionAccess().getNameIDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getTokenDefinitionRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"org.eclipse.xtext.common.Terminals.ID");
			}
		)
	)
;

// Entry rule entryRuleFunction
entryRuleFunction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFunctionRule()); }
	iv_ruleFunction=ruleFunction
	{ $current=$iv_ruleFunction.current; }
	EOF;

// Rule Function
ruleFunction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_ID
			{
				newLeafNode(lv_name_0_0, grammarAccess.getFunctionAccess().getNameIDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getFunctionRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"org.eclipse.xtext.common.Terminals.ID");
			}
		)
	)
;

// Entry rule entryRuleLayer
entryRuleLayer returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLayerRule()); }
	iv_ruleLayer=ruleLayer
	{ $current=$iv_ruleLayer.current; }
	EOF;

// Rule Layer
ruleLayer returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_ID
			{
				newLeafNode(lv_name_0_0, grammarAccess.getLayerAccess().getNameIDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getLayerRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"org.eclipse.xtext.common.Terminals.ID");
			}
		)
	)
;

// Entry rule entryRuleRule
entryRuleRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRuleRule()); }
	iv_ruleRule=ruleRule
	{ $current=$iv_ruleRule.current; }
	EOF;

// Rule Rule
ruleRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getRuleAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRuleRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1=Colon
		{
			newLeafNode(otherlv_1, grammarAccess.getRuleAccess().getColonKeyword_1());
		}
		this_BEGIN_2=RULE_BEGIN
		{
			newLeafNode(this_BEGIN_2, grammarAccess.getRuleAccess().getBEGINTerminalRuleCall_2());
		}
		otherlv_3=When
		{
			newLeafNode(otherlv_3, grammarAccess.getRuleAccess().getWhenKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRuleAccess().getConditionSeqParserRuleCall_4_0());
				}
				lv_condition_4_0=ruleSeq
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRuleRule());
					}
					set(
						$current,
						"condition",
						lv_condition_4_0,
						"org.xtext.example.mydsl.MyDsl.Seq");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5=Then
		{
			newLeafNode(otherlv_5, grammarAccess.getRuleAccess().getThenKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRuleAccess().getThenPartTransferModelParserRuleCall_6_0());
				}
				lv_thenPart_6_0=ruleTransferModel
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRuleRule());
					}
					set(
						$current,
						"thenPart",
						lv_thenPart_6_0,
						"org.xtext.example.mydsl.MyDsl.TransferModel");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7=Example
		{
			newLeafNode(otherlv_7, grammarAccess.getRuleAccess().getExampleKeyword_7());
		}
		(
			(
				lv_example_8_0=RULE_STRING
				{
					newLeafNode(lv_example_8_0, grammarAccess.getRuleAccess().getExampleSTRINGTerminalRuleCall_8_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRuleRule());
					}
					setWithLastConsumed(
						$current,
						"example",
						lv_example_8_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			otherlv_9=Layer
			{
				newLeafNode(otherlv_9, grammarAccess.getRuleAccess().getLayerKeyword_9_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getRuleRule());
						}
					}
					otherlv_10=RULE_ID
					{
						newLeafNode(otherlv_10, grammarAccess.getRuleAccess().getLayerLayerCrossReference_9_1_0());
					}
				)
			)
		)?
		this_END_11=RULE_END
		{
			newLeafNode(this_END_11, grammarAccess.getRuleAccess().getENDTerminalRuleCall_10());
		}
	)
;
