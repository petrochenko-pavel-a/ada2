/*
 * generated by Xtext 2.10.0
 */
lexer grammar InternalMyDslLexer;

@header {
package org.xtext.example.mydsl.parser.antlr.lexer;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

Functions : 'functions:';

Classes : 'classes:';

Example : 'example:';

Layers : 'layers:';

Layer : 'layer:';

Rules : 'rules:';

Then : 'then:';

When : 'when:';

AsteriskEqualsSign : '*=';

PlusSignEqualsSign : '+=';

EqualsSignGreaterThanSign : '=>';

LeftParenthesis : '(';

RightParenthesis : ')';

Asterisk : '*';

PlusSign : '+';

Comma : ',';

Colon : ':';

EqualsSign : '=';

QuestionMark : '?';

LeftSquareBracket : '[';

RightSquareBracket : ']';

VerticalLine : '|';

// Rules duplicated to allow inter-rule references

fragment RULE_BEGIN : ;

fragment RULE_END : ;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
